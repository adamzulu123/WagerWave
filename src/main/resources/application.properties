spring.application.name=WagerWave
# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://mysql-1c515400-wagerwave-db.j.aivencloud.com:27139/WagerWave_db
spring.datasource.username=WWdeveloper
spring.datasource.password=${PASS}


# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
#z jakiegos poowdu dzi?ki temu juz hibernate ogarnia juz ze ma u?y? tabeli Users, a nie tworzy? now?
#bo jak mia?em to: spring.jpa.hibernate.ddl-auto=validate - na update to tworzy? users,
#a jak mialem validate to by? problem
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


# Flyway - configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.default-schema=WagerWave_db
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1

#teraz mozemy zrobic z laptopa sewer na którym inny uzytkonnicy przez ip i podany port beda mogli sie ?aczyc
#a spring boot security domy?lnie obsluguje wiele sesji, wiec jak ktos sie po?aczy i zaloguje na inne konto
#na innym urz?dzeniu to zostanie utworzona nowa secsja
server.address=0.0.0.0
server.port=8080

# api-basketball configuration
basketball.api.host=https://v1.basketball.api-sports.io
basketball.api.key=${apiKEY}


